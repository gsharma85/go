// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events.proto

package data

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AckEvent struct {
	Ack                  int32    `protobuf:"varint,1,opt,name=ack,proto3" json:"ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckEvent) Reset()         { *m = AckEvent{} }
func (m *AckEvent) String() string { return proto.CompactTextString(m) }
func (*AckEvent) ProtoMessage()    {}
func (*AckEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{0}
}

func (m *AckEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckEvent.Unmarshal(m, b)
}
func (m *AckEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckEvent.Marshal(b, m, deterministic)
}
func (m *AckEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckEvent.Merge(m, src)
}
func (m *AckEvent) XXX_Size() int {
	return xxx_messageInfo_AckEvent.Size(m)
}
func (m *AckEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AckEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AckEvent proto.InternalMessageInfo

func (m *AckEvent) GetAck() int32 {
	if m != nil {
		return m.Ack
	}
	return 0
}

type FileEvent struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ActorSystemPath      string   `protobuf:"bytes,2,opt,name=actorSystemPath,proto3" json:"actorSystemPath,omitempty"`
	ActorPath            string   `protobuf:"bytes,3,opt,name=actorPath,proto3" json:"actorPath,omitempty"`
	Action               string   `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Time                 string   `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileEvent) Reset()         { *m = FileEvent{} }
func (m *FileEvent) String() string { return proto.CompactTextString(m) }
func (*FileEvent) ProtoMessage()    {}
func (*FileEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{1}
}

func (m *FileEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileEvent.Unmarshal(m, b)
}
func (m *FileEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileEvent.Marshal(b, m, deterministic)
}
func (m *FileEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileEvent.Merge(m, src)
}
func (m *FileEvent) XXX_Size() int {
	return xxx_messageInfo_FileEvent.Size(m)
}
func (m *FileEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_FileEvent.DiscardUnknown(m)
}

var xxx_messageInfo_FileEvent proto.InternalMessageInfo

func (m *FileEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileEvent) GetActorSystemPath() string {
	if m != nil {
		return m.ActorSystemPath
	}
	return ""
}

func (m *FileEvent) GetActorPath() string {
	if m != nil {
		return m.ActorPath
	}
	return ""
}

func (m *FileEvent) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *FileEvent) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func init() {
	proto.RegisterType((*AckEvent)(nil), "AckEvent")
	proto.RegisterType((*FileEvent)(nil), "FileEvent")
}

func init() {
	proto.RegisterFile("events.proto", fileDescriptor_8f22242cb04491f9)
}

var fileDescriptor_8f22242cb04491f9 = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x2d, 0x4b, 0xcd,
	0x2b, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x92, 0xe1, 0xe2, 0x70, 0x4c, 0xce, 0x76,
	0x05, 0x09, 0x09, 0x09, 0x70, 0x31, 0x27, 0x26, 0x67, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06,
	0x81, 0x98, 0x4a, 0x93, 0x19, 0xb9, 0x38, 0xdd, 0x32, 0x73, 0x52, 0x21, 0xf2, 0x42, 0x5c, 0x2c,
	0x79, 0x89, 0xb9, 0xa9, 0x60, 0x05, 0x9c, 0x41, 0x60, 0xb6, 0x90, 0x06, 0x17, 0x7f, 0x62, 0x72,
	0x49, 0x7e, 0x51, 0x70, 0x65, 0x71, 0x49, 0x6a, 0x6e, 0x40, 0x62, 0x49, 0x86, 0x04, 0x13, 0x58,
	0x1a, 0x5d, 0x58, 0x48, 0x86, 0x8b, 0x13, 0x2c, 0x04, 0x56, 0xc3, 0x0c, 0x56, 0x83, 0x10, 0x10,
	0x12, 0xe3, 0x62, 0x4b, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0x93, 0x60, 0x01, 0x4b, 0x41, 0x79, 0x20,
	0x3b, 0x4b, 0x32, 0x73, 0x53, 0x25, 0x58, 0x21, 0x76, 0x82, 0xd8, 0x4e, 0xda, 0x51, 0x9a, 0xe9,
	0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0xe9, 0xc5, 0x19, 0x89, 0x45, 0xb9,
	0x89, 0x16, 0xa6, 0xfa, 0xe9, 0xf9, 0xfa, 0x29, 0x89, 0x25, 0x89, 0x69, 0x39, 0xf9, 0xe5, 0xfa,
	0x05, 0xd9, 0xe9, 0x60, 0x4e, 0x12, 0x1b, 0xd8, 0x9f, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x65, 0x3d, 0x50, 0x2f, 0xf7, 0x00, 0x00, 0x00,
}
